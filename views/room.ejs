<!DOCTYPE html>
<html>
  <head>
    <title>Meet</title>
    <style>
      body { margin:0; background:#000; font-family:Arial; }
      #video-grid { display:grid; grid-template-columns:repeat(auto-fill,minmax(300px,1fr)); gap:10px; padding:10px; }
      video { width:100%; border-radius:10px; border:2px solid #333; background:black; }
    </style>
  </head>
  <body>
    <div id="video-grid">
      <video id="myVideo" autoplay playsinline muted></video>
    </div>

    <script src="/socket.io/socket.io.js"></script>
    <script src="https://unpkg.com/peerjs@1.5.2/dist/peerjs.min.js"></script>
    <script>
      const socket = io("/");
      const myVideo = document.getElementById("myVideo");
      myVideo.muted = true;

      const peers = {};
      const videoGrid = document.getElementById("video-grid");

      const myPeer = new Peer(undefined, {
        host: "/", 
        port: 3001 // make sure PeerJS server is running
      });

      navigator.mediaDevices.getUserMedia({ video:true, audio:true })
      .then(stream => {
        addVideoStream(myVideo, stream);

        myPeer.on("call", call => {
          call.answer(stream);
          const video = document.createElement("video");
          call.on("stream", userVideoStream => addVideoStream(video, userVideoStream));
        });

        socket.on("user-connected", userId => {
          connectToNewUser(userId, stream);
        });
      });

      socket.on("user-disconnected", userId => {
        if(peers[userId]) peers[userId].close();
      });

      myPeer.on("open", id => {
        socket.emit("join-peer", id); // notify server about this peer
      });

      function connectToNewUser(userId, stream){
        const call = myPeer.call(userId, stream);
        const video = document.createElement("video");
        call.on("stream", userVideoStream => addVideoStream(video, userVideoStream));
        call.on("close", () => video.remove());
        peers[userId] = call;
      }

      function addVideoStream(video, stream){
        video.srcObject = stream;
        video.addEventListener("loadedmetadata", () => video.play());
        videoGrid.append(video);
      }
    </script>
  </body>
</html>
